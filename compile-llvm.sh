#!/bin/sh
set -e

# TODO: convert to javascript file to clean up and to avoid using backslashes

ARCH=${ARCH:-"x86_64"}
NINJA=${NINJA:-"ninja"}
LLVM_BOOTSTRAP=${LLVM_BOOTSTRAP:-"$HOME/Downloads/llvm"}
SYSROOT=${SYSROOT:-"/usr/local/dev/llvm-install"}
HOST_TARGET=${HOST_TARGET:-"x86_64-unknown-linux-gnu"}
LLVM_CC=${LLVM_CC:-"gcc"}
LLVM_CXX=${LLVM_CXX:-"g++"}
LD_LIBRARY_PATH="/usr/local/lib:/usr/local/lib64:$LD_LIBRARY_PATH"
PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH"
LLVM_PROJECTS=${LLVM_PROJECTS:-"clang;lldb;lld;mlir;polly;compiler-rt;bolt;clang-tools-extra"}
RUNTIME_TARGETS=${RUNTIME_TARGETS:-"${HOST_TARGET}"}
LLVM_TARGETS=${LLVM_TARGETS:-"host;WebAssembly"}

cmake -B ./build/llvm \
	-S ./llvm-project/llvm \
	-G Ninja \
	-DLLVM_ENABLE_RUNTIMES="libc;libcxx;libcxxabi;libunwind" \
	-DLLVM_RUNTIME_TARGETS="${RUNTIME_TARGETS}" \
	-DLIBUNWIND_ENABLE_SHARED=OFF \
	-DSANITIZER_USE_STATIC_LLVM_UNWINDER=ON \
	-DSANITIZER_USE_STATIC_CXX_ABI=ON \
	-DCOMPILER_RT_HAS_SANITIZER_COMMON=OFF \
	-DCOMPILER_RT_BUILD_SANITIZERS=OFF \
	-DLIBCXXABI_ENABLE_SHARED=OFF \
	-DCOMPILER_RT_USE_LIBCXX=ON \
	-DCOMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC=ON \
	-DCOMPILER_RT_BUILD_GWP_ASAN=OFF \
	-DCOMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED=OFF \
	-DLLVM_LIBC_FULL_BUILD=ON \
	-DLLVM_LIBC_INCLUDE_SCUDO=ON \
	-DLIBCXX_HAS_ATOMIC_LIB=OFF \
	-DLIBUNWIND_ENABLE_STATIC=ON \
	-DLIBCXX_ENABLE_STATIC=ON \
	-DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
	-DCMAKE_C_COMPILER=${LLVM_CC} \
	-DCMAKE_CXX_COMPILER=${LLVM_CXX} \
	-DLLVM_DEFAULT_TARGET_TRIPLE="${HOST_TARGET}" \
	-DCMAKE_INSTALL_PREFIX="${SYSROOT}" \
	-DBUILD_SHARED_LIBS=OFF \
	-DLLVM_BUILD_STATIC=ON \
	-DLLVM_ENABLE_ASSERTIONS=ON \
	-DLLVM_ENABLE_BACKTRACES=ON \
	-DCMAKE_BUILD_TYPE=MinSizeRel \
	-DLLVM_ENABLE_PROJECTS="${LLVM_PROJECTS}" \
	-DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD="${LLVM_TARGETS}" \
	-DLLVM_INCLUDE_TESTS=ON \
	-DLLVM_BUILD_TESTS=OFF \
	-DLLVM_ENABLE_RTTI=ON \
	-DLLVM_PARALLEL_LINK_JOBS=2 \
	-DLLVM_ENABLE_LIBXML2=OFF \
	-DLLVM_ENABLE_TERMINFO=OFF \
	-DLLVM_CCACHE_BUILD=ON \
	-DLLVM_ENABLE_LIBCXX=ON \
	-DLIBCLANG_BUILD_STATIC=ON \
	-DLLVM_ENABLE_PIC=ON \
	-DLLVM_ENABLE_ZLIB=OFF \
	-DLLVM_ENABLE_LIBEDIT=OFF \
	-DLLVM_ENABLE_ZSTD=OFF \
	-DLLDB_ENABLE_LIBEDIT=OFF \
	-DLLDB_ENABLE_PYTHON=OFF \
	-DLLDB_ENABLE_CURSES=OFF \
	-DLLDB_ENABLE_LIBXML2=OFF \
	-DLLDB_ENABLE_LZMA=OFF \
	-DLLDB_ENABLE_LUA=OFF
mold -run ${NINJA} -C ./build/llvm \
	install-clang \
	install-builtins \
	install-compiler-rt \
	install-core-resource-headers \
	install-llvmlibc \
	install-lld

