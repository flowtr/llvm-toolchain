#!/bin/sh
set -e

ARCH=${ARCH:-"x86_64"}
NINJA=${NINJA:-"ninja"}
SYSROOT=${SYSROOT:-"/usr/local/dev/llvm-install"}
LLVM_TARGET=${LLVM_TARGET:-"x86_64-unknown-linux-gnu"}
LLVM_CC=${LLVM_CC:-"$HOME/Downloads/llvm/bin/clang"}
LLVM_CXX=${LLVM_CXX:-"$HOME/Downloads/llvm/bin/clang++"}
LD_LIBRARY_PATH="/usr/local/lib:/usr/local/lib64:$LD_LIBRARY_PATH"
PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH"
LLVM_PROJECTS=${LLVM_PROJECTS:-"clang;lldb;lld;mlir;polly"}

# TODO: get compiler-rt sanitizers to link libunwind statically
cmake -B build/runtimes \
	-G Ninja \
	./llvm-project/runtimes \
	-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
	-DLLVM_BUILD_STATIC=ON \
	-DLLVM_ENABLE_ASSERTIONS=ON \
	-DCOMPILER_RT_BUILD_SANITIZERS=OFF \
	-DLLVM_ENABLE_RUNTIMES="libc;libcxx;libcxxabi;libunwind;compiler-rt" \
	-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
	-DLLVM_BUILD_STATIC=ON \
	-DLLVM_ENABLE_ASSERTIONS=ON \
	-DCMAKE_BUILD_TYPE=MinSizeRel \
	-DCMAKE_INSTALL_PREFIX="${SYSROOT}" \
	-DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
	-DCMAKE_C_COMPILER=${LLVM_CC} \
	-DCMAKE_CXX_COMPILER=${LLVM_CXX} \
	-DLLVM_DEFAULT_TARGET_TRIPLE="${LLVM_TARGET}" \
	-DBUILD_SHARED_LIBS=OFF \
	-DCOMPILER_RT_BUILD_BUILTINS=ON \
	-DCOMPILER_RT_USE_LIBCXX=ON \
	-DCOMPILER_RT_USE_LLVM_UNWINDER=ON \
	-DLIBCXX_ENABLE_SHARED=NO \
	-DCOMPILER_RT_BUILD_GWP_ASAN=OFF \
	-DLIBCXX_ENABLE_STATIC=YES \
	-DLIBCXXABI_USE_LLVM_UNWINDER=ON \
	-DSANITIZER_USE_STATIC_LLVM_UNWINDER=ON \
	-DLIBUNWIND_ENABLE_STATIC=ON \
	-DLIBUNWIND_ENABLE_SHARED=ON \
  -DLIBUNWIND_USE_COMPILER_RT=ON \
	-DCOMPILER_RT_BUILD_STANDALONE_LIBATOMIC=ON \
	-DLLVM_PARALLEL_LINK_JOBS=2 
${NINJA} -C ./build/runtimes -j8
${NINJA} -C ./build/runtimes \
	install/strip

cmake -B ./build/llvm \
	-S ./llvm-project/llvm \
	-G Ninja \
	-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
	-DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
	-DCMAKE_C_COMPILER=${LLVM_CC} \
	-DCMAKE_CXX_COMPILER=${LLVM_CXX} \
	-DLLVM_DEFAULT_TARGET_TRIPLE="${LLVM_TARGET}" \
	-DCMAKE_INSTALL_PREFIX="${SYSROOT}" \
	-DBUILD_SHARED_LIBS=OFF \
	-DLLVM_BUILD_STATIC=ON \
	-DLLVM_ENABLE_ASSERTIONS=ON \
	-DCMAKE_BUILD_TYPE=MinSizeRel \
	-DLLVM_ENABLE_PROJECTS="${LLVM_PROJECTS}" \
	-DLLVM_INCLUDE_TESTS=ON \
	-DLLVM_BUILD_TESTS=OFF \
	-DLLVM_ENABLE_RTTI=ON \
  -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
  -DCLANG_DEFAULT_RTLIB=compiler-rt \
  -DCLANG_DEFAULT_LINKER=lld \
	-DLLVM_PARALLEL_LINK_JOBS=2 \
	-DLLVM_ENABLE_LIBXML2=OFF \
	-DLLVM_ENABLE_TERMINFO=OFF \
	-DLLVM_CCACHE_BUILD=ON \
	-DLLVM_ENABLE_ZLIB=OFF \
	-DLLVM_ENABLE_ASSERTIONS=ON \
	-DLIBCLANG_BUILD_STATIC=ON \
	-DLLVM_ENABLE_LIBEDIT=OFF \
	-DLLVM_ENABLE_ZSTD=OFF \
	-DLLDB_ENABLE_LIBEDIT=OFF \
	-DLLDB_ENABLE_PYTHON=OFF \
	-DLLDB_ENABLE_CURSES=OFF \
	-DLLDB_ENABLE_LIBXML2=OFF \
	-DLLDB_ENABLE_LZMA=OFF \
	-DLLDB_ENABLE_LUA=OFF
mold -run ${NINJA} -C ./build/llvm -j8
mold -run ${NINJA} -C ./build/llvm \
	install/strip

